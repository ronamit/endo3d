def fig2img(fig):
    ''''
    Example:
            ax.imshow(frame, cmap='hot', interpolation='nearest')
            plt.axis('off')
            plt.axis('image')
            plt.subplots_adjust(left=0, right=1, top=1, bottom=0)  # remove white padding
            im = fig2img(fig)
            plt.cla()
            out_vid.write(im)
    '''
    fig.canvas.draw()
    # convert canvas to image using numpy
    img = np.frombuffer(fig.canvas.tostring_rgb(), dtype='uint8')
    img = img.reshape(fig.canvas.get_width_height()[::-1] + (3,))
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    np.flip(img, 1)
    return img



    def save_grayscale_video(frames, output_path, frame_rate, value_scale):
    n_frames = frames.shape[0]
    # set the last dim to zero, since the image is grayscale
    frame_size = frames.shape[1:3]

    fourcc = cv2.VideoWriter_fourcc(*'avc1')
    out_vid = cv2.VideoWriter(filename=f'{output_path}.mp4',
                              fourcc=fourcc,
                              fps=frame_rate,
                              frameSize=frame_size,
                              isColor=False)

    # Loop through each frame of the matrix and write it to the video
    for i in range(n_frames):
        frame = frames[i]
        im = frame * value_scale
        im = np.round(im).astype(np.uint8)
        out_vid.write(im)
    out_vid.release()  # Release the video
    print(f'Depth video saved to: {output_path}')


